<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<ItemGroup>
		<AvailableItemName Include="CompileShader" />   
	</ItemGroup>
	
	<PropertyGroup Condition="'$(FxcCommandLine)' == ''" >
		<!-- IMPORTANT: Requires DirectX SDK (June 2010) is installed -->
		<FxcCommandLine Condition="'$(OS)' == 'Windows_NT'" >"$(MSBuildThisFileDirectory)tools\fxc"</FxcCommandLine>
		<!-- Seeing as we have the executable handy for wine, we don't really need to use the installation... -->
		<!--<FxcCommandLine Condition="'$(OS)' == 'Windows_NT'" >"c:\Program Files (x86)\Microsoft DirectX SDK (June 2010)\Utilities\bin\x86\fxc.exe"</FxcCommandLine>-->
		
		<!-- IMPORTANT: Requires wine is in PATH, and installing winetricks d3dcompiler_43 -->
		<FxcCommandLine Condition="'$(OS)' != 'Windows_NT'" >wine "$(MSBuildThisFileDirectory)tools/fxc"</FxcCommandLine>
	</PropertyGroup>  

	
	<!-- Reference:
		https://stackoverflow.com/questions/3433200/msbuild-how-do-i-create-and-use-a-task-to-convert-content-items-at-build-time
		
		Handy reload solution: https://stackoverflow.com/a/24837585/165500
	-->
	<Target Name="BuildShaders" BeforeTargets="Compile"
		Inputs="@(CompileShader)"
		Outputs="@(CompileShader -> '$(OutputPath)%(RelativeDir)%(Filename).fxb' )" >
		
		<!-- fxc doesn't know how to create directories: -->
		<MakeDir Directories="$(OutputPath)%(CompileShader.RelativeDir)"/>
		
		<Exec Command="$(FxcCommandLine) /nologo /Vd /T fx_2_0 /Fo &quot;$(OutputPath)%(CompileShader.RelativeDir)%(CompileShader.Filename).fxb&quot; &quot;%(CompileShader.Identity)&quot;" />
		
		<Message Text="@(CompileShader -> '$(OutputPath)%(RelativeDir)%(Filename).fxb' )" Importance="High" />
		
		<!-- Add to the cleaning list, so we know how to do rebuilds:
			(NOTE: FileWrites gets written out to obj directory at some point, possbily after CoreCompile)
		-->
		<ItemGroup>
			<FileWrites Include="@(CompileShader -> '$(OutputPath)%(RelativeDir)%(Filename).fxb' )"/>
		</ItemGroup>
	</Target>
	
	
	<!-- Ensure that dependent projects are aware of generated shaders:
	
		Reference: https://stackoverflow.com/questions/14322391/msbuild-to-copy-dynamically-generated-files-as-part-of-project-dependency
		Also: https://stackoverflow.com/questions/14322391/msbuild-to-copy-dynamically-generated-files-as-part-of-project-dependency
	-->
	<Target Name="IncludeShaders" BeforeTargets="GetCopyToOutputDirectoryItems">
		<ItemGroup>
			<CompiledShaders Include="@(CompileShader -> '$(OutputPath)%(RelativeDir)%(Filename).fxb' )">
				<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
				<TargetPath>%(RelativeDir)%(FileName).fxb</TargetPath>
			</CompiledShaders>
			<AllItemsFullPathWithTargetPath Include="@(CompiledShaders->'%(FullPath)')"  />
		</ItemGroup>
	</Target>
	
</Project>

